smtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)
biff = no

allow_min_user = yes

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtp_sasl_auth_enable = yes
smtp_sasl_security_options = noanonymous
smtp_sasl_password_maps = lmdb:/etc/postfix/sasl_passwd
smtp_use_tls = {{ .Env.USE_TLS }}
smtp_tls_security_level = {{ .Env.TLS_VERIFY }}
smtp_tls_note_starttls_offer = yes
smtp_tls_session_cache_database = lmdb:${data_directory}/smtp_scache
{{- if eq .Env.EXT_RELAY_PORT "465" }}
smtp_tls_wrappermode = yes
{{- end }}

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = {{ .Env.RELAY_HOST_NAME }}
alias_maps = lmdb:/etc/postfix/aliases
alias_database = lmdb:/etc/postfix/aliases
myorigin = /etc/mailname
mydestination = {{ .Env.RELAY_HOST_NAME }}, localhost
{{- if getenv "CUSTOM_TRANSPORT_MAPS" }}
relayhost = {{ .Env.EXT_RELAY_HOST }}:{{ .Env.EXT_RELAY_PORT }}
{{- else }}
relayhost =
{{- end }}
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 {{ .Env.ACCEPTED_NETWORKS }}
mailbox_size_limit = 0
recipient_delimiter = +
{{- if getenv "RECIPIENT_CANONICAL_MAPS" }}
recipient_canonical_maps = {{ if strings.HasSuffix ".template" .Env.RECIPIENT_CANONICAL_MAPS }}{{ coll.GoSlice .Env.RECIPIENT_CANONICAL_MAPS 0 (sub (len .Env.RECIPIENT_CANONICAL_MAPS) 9) }}{{ else }}{{ .Env.RECIPIENT_CANONICAL_MAPS }}{{ end }}
{{- end }}
{{- if getenv "RECIPIENT_CANONICAL_CLASSES" }}
recipient_canonical_classes = {{ .Env.RECIPIENT_CANONICAL_CLASSES }}
{{- end }}
{{- if getenv "SENDER_BCC_MAPS" }}
sender_bcc_maps = {{ if strings.HasSuffix ".template" .Env.SENDER_BCC_MAPS }}{{ coll.GoSlice .Env.SENDER_BCC_MAPS 0 (sub (len .Env.SENDER_BCC_MAPS) 9) }}{{ else }}{{ .Env.SENDER_BCC_MAPS }}{{ end }}
{{- end }}
{{- if getenv "HEADER_CHECKS" }}
header_checks = {{ if strings.HasSuffix ".template" .Env.HEADER_CHECKS }}{{ coll.GoSlice .Env.HEADER_CHECKS 0 (sub (len .Env.HEADER_CHECKS) 9) }}{{ else }}{{ .Env.HEADER_CHECKS }}{{ end }}
{{- end }}
{{- if getenv "SMTP_HEADER_CHECKS" }}
stmp_header_checks = {{ if strings.HasSuffix ".template" .Env.SMTP_HEADER_CHECKS }}{{ coll.GoSlice .Env.SMTP_HEADER_CHECKS 0 (sub (len .Env.SMTP_HEADER_CHECKS) 9) }}{{ else }}{{ .Env.SMTP_HEADER_CHECKS }}{{ end }}
{{- end }}
{{- if getenv "BODY_CHECKS" }}
body_checks = {{ if strings.HasSuffix ".template" .Env.BODY_CHECKS }}{{ coll.GoSlice .Env.BODY_CHECKS 0 (sub (len .Env.BODY_CHECKS) 9) }}{{ else }}{{ .Env.BODY_CHECKS }}{{ end }}
{{- end }}
inet_interfaces = all
inet_protocols = {{ getenv "INET_PROTOCOLS" "all" }}
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt

################################################
# TLS smtpd daemon configuration
################################################
smtpd_tls_CApath = {{ .Env.SERVER_CA_PATH }}
smtpd_tls_CAfile = {{ .Env.SERVER_CA_FILE }}
smtpd_tls_cert_file = {{ .Env.SERVER_CERT_FILE }}
smtpd_tls_key_file = {{ .Env.SERVER_KEY_FILE }}
smtpd_tls_mandatory_exclude_ciphers = aNULL

smtpd_tls_loglevel = 1
smtpd_tls_received_header = yes
smtpd_tls_security_level = {{ .Env.SERVER_SEC_LEVEL }}

smtpd_use_tls={{ .Env.SERVER_USE_TLS }}
smtpd_tls_session_cache_database = lmdb:${data_directory}/smtpd_scache

# SASL SUPPORT FOR CLIENTS
# The following options set parameters needed by Postfix to enable 
# Cyrus-SASL support for authentication of mail clients. 
# 
smtpd_sasl_auth_enable = yes
smtpd_sasl_local_domain = $myhostname
smtpd_sasl_security_options = noanonymous
{{- if getenv "SMTPD_LOGIN" }}
cyrus_sasl_config_path = /etc/sasl2/
smtpd_sasl_path = smtpd
smtpd_tls_auth_only = no
smtpd_sasl_tls_security_options = $smtpd_sasl_security_options
{{- end }}

{{- if getenv "SERVER_TLS_PROTOCOLS" }}
smtpd_tls_protocols = {{ .Env.SERVER_TLS_PROTOCOLS }}
{{- end }}
{{- if getenv "SERVER_TLS_MANDATORY_PROTOCOLS" }}
smtpd_tls_mandatory_protocols = {{ .Env.SERVER_TLS_MANDATORY_PROTOCOLS }}
{{- end }}

{{- if getenv "CUSTOM_TRANSPORT_MAPS" }}
transport_maps = {{ if strings.HasSuffix ".template" .Env.CUSTOM_TRANSPORT_MAPS }}{{ coll.GoSlice .Env.CUSTOM_TRANSPORT_MAPS 0 (sub (len .Env.CUSTOM_TRANSPORT_MAPS) 9) }}{{ else }}{{ .Env.CUSTOM_TRANSPORT_MAPS }}{{ end }}
{{- end }}
